: Fuxo principal do login do funcinário:

1.  ->  View  PREENCHE  (nome do  funcionário CPf)

2  ->controller(nome, do funcionário,cpf)TRANSMITE
 -> model

3. ->   Model (nome do funcionário,cpf) AUTOEIZA -> controller ->Redireciona para home7

Fluxo  altenativo  do login do funcionário;

1. -> View PREENCHE   (nome do funcionário,cpf)

2.  -> Controller (nome do funcionário,cpf)TRANSMITE
->  Model 

3. -> Model(nome do funcionário,cpf)não  altorizado  ->Controlle  -> mensagem deerro

4.-> controlle-> TRANSMITE -> view

: Fluxo principal do login do cliente:

1.  -> View PREENCHER( nome do cliente,  CPF)

2.  ->  Controller ( nome do cliente, CPF) TRNSMITE -> ModelFluxo  altenativo  do login do cliente:

3. ->   Model (nome do cliente,cpf) AUTOEIZA -> controller ->Redireciona para home

Fluxo  altenativo  do login do cliente:

1. -> View PREENCHE   (nome do cliente ,cpf)

2.  -> Controller (nome do  ,cpf)TRANSMITE
->  Model 

3. -> Model(nome do cliente,cpf)não  altorizado  ->Controlle  -> mensagem de erro

4.-> controlle-> TRANSMITE -> view

[: Fluxo principal do login do cliente:

1.  -> View PREENCHER( nome do cliente,  CPF)

2.  ->  Controller ( nome do cliente, CPF) TRNSMITE -> Model



3. -> ModelA°1
 Fluxo principal do cadastros do cliente:

1.  ->  View  PREENCHE  (nome do tuto ,CPF,telefone,nome do pet,peso,espécie)

2  ->Controller(nome do tuto  ,cpf,telefone,nome do pet,peso,espécie)TRANSMITIR
-> Model

3. ->   Model (nome do tuto ,cpf,telefone,nome do pet,peso,espécie)  -> ARMAZENAR DADOS

4. -> Model ->MEMSAGEM -> CADRASTO CONCLUIDO COM SUCESSO -> CONTROLLER

5. ->Controller-> TRASMITIR -> CADRASTO CONCLUIDO COM SUCESSO -> View

Fluxo altenativo  do cadastro do cliente:

1. -> View PREENCHE   ( nome do tuto ,CPF,telefone,nome do pet,peso,espécie)

2.  - > Controller   (nome do tuto ,CPF,telefone,nome do pet,peso,espécie)TRANSMITE->  Model 

3. ->   Model (nome do tuto ,cpf,telefone,nome do pet,peso,espécie)  -> ARMAZENAR DADOS

4. -> Model ->MEMSAGEM ->-NÃO FOI´POSSIVEL ARMAZENA OS DADOS> CONTROLLER

5. ->Controller-> TRASMITIR->MEMSAGEM -> NÃO FOI´POSSIVEL ARMAZENA OS DADO 

 Fluxo principal do cadastros do  funcionário:

1.  ->  View  PREENCHE  (nome do funcionário,CPF,especialização)

2  ->Controller (nome do funcionário,CPF,especialização) TRANSMITIR
-> Model

3. ->   Model (nome do funcionário,CPF,especialização) -> ARMAZENAR DADOS

4. -> Model ->MEMSAGEM -> CADRASTO CONCLUIDO COM SUCESSO -> CONTROLLER

5. ->Controller-> TRASMITIR -> CADRASTO CONCLUIDO COM SUCESSO -> View

Fluxo altenativo  do cadastro do funcionário:

1.  ->  View  PREENCHE  (nome do funcionário,CPF,especialização)

2  ->Controller (nome do funcionário,CPF,especialização) TRANSMITIR
-> Model

3. ->   Model (nome do funcionário,CPF,especialização) -> ARMAZENAR DADOS.

 4. -> Model ->MEMSAGEM ->-NÃO FOI´POSSIVEL ARMAZENA OS DADOS> CONTROLLER

5. ->Controller-> TRASMITIR->MEMSAGEM -> NÃO FOI´POSSIVEL ARMAZENA OS DADO

principal de criar serviço:

1)O caso de uso inicia com o ator administrador solicitando a criação de um novo serviço.

2)O sistema apresenta o formulário para ser preenchimento.

3]O ator administrador preenche o formularuo.

O sistema válida os dados do serviço.

O sistema armazena os dados do serviço.

o sistema envia ao a4 qpytor administrador uma mensagem de confirmação.

caso de uso encerrado.

Fluxo alternativo de criar serviço:

1)O caso de uso inicia com o ator administrador solicitando a criação de um novo serviço.

2)O sistema apresenta o formulário para ser preenchimento.

3]O ator administrador não preenche adequadamente o formulário. caso de uso encerrado.

4)caso de uso encerrado.

Atores:Administrador Fluxo principal do cadastro do serviço:

3->Model->ARMAZENAR DADOS DO SERVIÇO-->Controller

4->Controller->TRASMITIR->Vew

5->Vew->EXIBIR MEMSAGEM( Cadastro concluído com sucesso.)

Fluxo altenativo do cadastro do serviço:

1->Vew-> PREENCHE OS DADOS DO SERVIÇO->Controller

2->Controller->TRASMITIR->Model

3->Model->
